name: CI-dev

on:
  push:
    branches-ignore:
      - master
  pull_request:
  workflow_dispatch:

env:
  EARTHLY_BUILDKIT_HOST: tcp://earthly:8372
  EARTHLY_USE_INLINE_CACHE: "true"
  EARTHLY_SAVE_INLINE_CACHE: "true"
  FORCE_COLOR: 1

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    container: haxe/haxelib_devcontainer_workspace:20220109090548
    services:
      earthly:
        image: earthly/buildkitd:v0.6.2
        options: --privileged
        env:
          BUILDKIT_TCP_TRANSPORT_ENABLED: "true"
        ports:
          - 8372
        volumes:
          - /tmp/earthly
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build devcontainer image
        run: earthly --push +devcontainer --DEVCONTAINER_IMAGE_NAME="ghcr.io/${{ github.repository_owner }}/haxelib_devcontainer_workspace" --DEVCONTAINER_IMAGE_TAG="${{ github.sha }}"
      - name: Build haxelib server image
        run: earthly --push +haxelib-server --HAXELIB_SERVER_IMAGE_NAME="ghcr.io/${{ github.repository_owner }}/lib.haxe.org" --HAXELIB_SERVER_IMAGE_TAG="${{ github.sha }}"
  test:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
    container:
      image: ghcr.io/${{ github.repository_owner }}/haxelib_devcontainer_workspace:${{ github.sha }}
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    services:
      haxelib:
        image: ghcr.io/${{ github.repository_owner }}/lib.haxe.org:${{ github.sha }}
        credentials:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        ports:
          - "80:80"
        env:
          HAXELIB_DB_HOST: mysql
          HAXELIB_DB_PORT: 3306
          HAXELIB_DB_USER: dbUser
          HAXELIB_DB_PASS: dbPass
          HAXELIB_DB_NAME: haxelib
      mysql:
        image: mariadb:10.5
        ports:
          - "3306:3306"
        env:
          TZ: UTC
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: haxelib
          MYSQL_USER: dbUser
          MYSQL_PASSWORD: dbPass
    env:
      HAXELIB_SERVER: haxelib
      HAXELIB_SERVER_PORT: 80
      HAXELIB_DB_HOST: mysql
      HAXELIB_DB_PORT: 3306
      HAXELIB_DB_USER: dbUser
      HAXELIB_DB_PASS: dbPass
      HAXELIB_DB_NAME: haxelib
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - run: neko run.n setup haxelib_global
      - run: haxe libs.hxml
      - run: haxe ci.hxml
      - name: Make sure the server is up
        run: curl -sSL "http://${HAXELIB_SERVER}:${HAXELIB_SERVER_PORT}" > /dev/null
      - run: neko bin/ci.n
  deploy:
    if: github.repository_owner == 'HaxeFoundation' && github.event_name == 'push'
    needs: test
    concurrency: deploy
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
    container:
      image: ghcr.io/${{ github.repository_owner }}/haxelib_devcontainer_workspace:${{ github.sha }}
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    env:
      AWS_DEFAULT_REGION: eu-west-1
      TF_INPUT: 0
      TF_IN_AUTOMATION: 1
    services:
      earthly:
        image: earthly/buildkitd:v0.6.2
        options: --privileged
        env:
          BUILDKIT_TCP_TRANSPORT_ENABLED: "true"
        ports:
          - 8372
        volumes:
          - /tmp/earthly
    steps:
      - uses: actions/checkout@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: haxeci
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Copy Lambda image
        run: earthly +copy-image --SRC="ghcr.io/${{ github.repository_owner }}/lib.haxe.org:${{ github.sha }}" --DEST="haxe/lib.haxe.org:${{ github.sha }}"
      - run: terraform init
        working-directory: terraform
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - run: terraform apply -auto-approve
        working-directory: terraform
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          DIGITALOCEAN_ACCESS_TOKEN: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
          SPACES_ACCESS_KEY_ID: ${{ secrets.SPACES_ACCESS_KEY_ID }}
          SPACES_SECRET_ACCESS_KEY: ${{ secrets.SPACES_SECRET_ACCESS_KEY }}
          TF_VAR_HAXELIB_DB_PASS: ${{ secrets.TF_VAR_HAXELIB_DB_PASS }}
          TF_VAR_HAXELIB_SERVER_IMAGE_DEVELOPMENT: haxe/lib.haxe.org:${{ github.sha }}
